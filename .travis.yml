# This file is part of IVRE.
# Copyright 2011 - 2020 Pierre LALET <pierre@droids-corp.org>
#
# IVRE is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# IVRE is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License
# along with IVRE. If not, see <http://www.gnu.org/licenses/>.

sudo: required
dist: bionic

env:
  # MaxMind (& utils)
  - DB=maxmind
  # TinyDB
  - DB=tinydb
  # Elasticsearch
  - DB=elastic ELASTIC_VERSION=7.3.1
  # PostgreSQL
  - DB=postgres POSTGRES_VERSION=9.5.10
  - DB=postgres POSTGRES_VERSION=10.1
  # MongoDB
  - DB=mongo MONGODB_VERSION=3.2.21
  - DB=mongo MONGODB_VERSION=4.1.3
  # Sqlite
  - DB=sqlite

language: python

cache: pip

python:
  - 2.7
  - 3.5
  - 3.8

matrix:
  # ivre ipdata --download segfaults with Bionic, Python 3.5 and PostgreSQL...
  exclude:
    - python: 3.5
      env: DB=postgres POSTGRES_VERSION=9.5.10
    - python: 3.5
      env: DB=postgres POSTGRES_VERSION=10.1
  include:
    - python: 3.4
      dist: xenial
      env: DB=maxmind
    - python: 3.4
      dist: xenial
      env: DB=tinydb
    - python: 3.4
      dist: xenial
      env: DB=elastic ELASTIC_VERSION=7.3.1
    - python: 3.4
      dist: xenial
      env: DB=postgres POSTGRES_VERSION=9.5.10
    - python: 3.4
      dist: xenial
      env: DB=postgres POSTGRES_VERSION=10.1
    - python: 3.4
      dist: xenial
      env: DB=mongo MONGODB_VERSION=3.2.21
    - python: 3.4
      dist: xenial
      env: DB=mongo MONGODB_VERSION=4.1.3
    - python: 3.4
      dist: xenial
      env: DB=sqlite

# PhantomJS is supposed to be installed
# (https://docs.travis-ci.com/user/gui-and-headless-browsers/#Using-PhantomJS),
# but we need tesseract
addons:
  apt:
    packages:
    - tesseract-ocr
    - tesseract-ocr-osd
    - tesseract-ocr-eng
    - phantomjs

install:
  - source ./.travis/install_${DB}.sh
  - PYVERS=`python -c 'import sys;print("%d%d" % sys.version_info[:2])'`; if [ -f "requirements-$DB-$PYVERS.txt" ]; then  pip install -U $PIP_INSTALL_OPTIONS -r "requirements-$DB-$PYVERS.txt"; else pip install -U $PIP_INSTALL_OPTIONS -r "requirements-$DB.txt"; fi
  - pip install $PIP_INSTALL_OPTIONS coverage codecov
  - pip install -U $PIP_INSTALL_OPTIONS --no-deps .
  # cleanup
  - mv ivre ivre.bak

# We need MongoDB many MongoDB versions
# https://github.com/travis-ci/travis-ci/issues/2246
#services: mongodb

before_script:
  # display version
  - ivre version
  # init DB
  - test "$DB" = "maxmind" || ivre ipinfo --init < /dev/null || echo "ERROR failed to init passive database."
  - test "$DB" = "maxmind" || ivre scancli --init < /dev/null || echo "ERROR failed to init nmap database."
  - test "$DB" = "maxmind" || ivre view --init < /dev/null || echo "ERROR failed to init view database."
  - test "$DB" != "tinydb" -a "$DB" != "mongo" || ivre flowcli --init < /dev/null || echo "ERROR failed to init flow database."
  - cat .travis/ivre.conf >> ~/.ivre.conf
  - echo "NMAP_SHARE_PATH = '`pwd`/usr/local/nmap/share/nmap'" >> ~/.ivre.conf
  - echo "WIRESHARK_SHARE_PATH = '`pwd`/usr/local/wireshark/share/wireshark'" >> ~/.ivre.conf
  # add wireshark manuf DB
  - mkdir -p usr/local/wireshark/share/wireshark
  - LD_LIBRARY_PATH= wget -q https://raw.githubusercontent.com/wireshark/wireshark/master/manuf -O usr/local/wireshark/share/wireshark/manuf
  - LD_LIBRARY_PATH= wget -q -O - https://github.com/ivre/ivre-test-samples/archive/36c6591395b86435ae3b0e9a7ab8c397bb1d33f7.tar.gz | tar --transform='s#^ivre-test-samples-[^/]*/*#./#' -zxf -
  # install Zeek & Nmap (.tar files)
  # for some reason, wget on travis-ci won't accept letsencrypt certificate
  - ZEEK_VERSION="3.$((RANDOM % 2))"; echo "ZEEK_VERSION $ZEEK_VERSION"; for archive in tools-travis-ivre zeek-${ZEEK_VERSION}_ubuntu-`awk -F = '/^DISTRIB_RELEASE=/ {print $2}' /etc/lsb-release` nmap-7.60_ubuntu-precise nfdump-1.6.17; do wget -q --no-check-certificate https://ivre.rocks/data/tests/${archive}.tar.bz2 -O - | tar jxf - ; done
  # get GeoIP CSV files -- we are supposed to build them, but that's
  # disabled in Travis since that's too slow
  - mv tests/geoip/GeoLite2-{ASN,City,Country}.dump-IPv4.csv.bz2 `python -c 'from ivre import config; print(config.GEOIP_PATH)'`; bunzip2 "/`python -c 'from ivre import config; print(config.GEOIP_PATH)'`/"GeoLite2-{ASN,City,Country}.dump-IPv4.csv.bz2
  - export PATH="`pwd`/usr/local/zeek/bin:`pwd`/usr/local/nmap/bin:`pwd`/usr/local/nfdump/bin:$PATH"
  - export LD_LIBRARY_PATH="`pwd`/usr/local/zeek/lib:`pwd`/usr/local/nfdump/lib"
  - export ZEEKPATH=".:`pwd`/usr/local/zeek/share/zeek:`pwd`/usr/local/zeek/share/zeek/policy:`pwd`/usr/local/zeek/share/zeek/site"
  # install IVRE's Nmap scripts.
  - cp `python -c "import ivre.config; print(ivre.config.guess_prefix('nmap_scripts'))"`/*.nse `pwd`/usr/local/nmap/share/nmap/scripts/
  - for patch in `python -c "import ivre.config; print(ivre.config.guess_prefix('nmap_scripts'))"`/patches/*; do (cd `pwd`/usr/local/nmap/share/nmap && patch -p0 < $patch); done
  - nmap --script-updatedb
  - test "$DB" != "elastic" || tar jxf ./tests/mongodb_backup/backup_nmap_passive.tar.bz2
  - export ZEEK_SAMPLES=`pwd`/usr/local/zeek/testing
  - ivre --version; echo; zeek --version; echo; nmap --version

script: (test "$DB" != "maxmind" || (flake8 --ignore=F401,E402 ./doc/conf.py && flake8 --ignore=W504 setup.py ./bin/ivre && flake8 --ignore=E402,W504 ./tests/tests.py && flake8 --ignore=W504 ./ivre.bak/ && echo "flake8 OK (except W504)")) && (test "$DB" != "maxmind" || test "$TRAVIS_PYTHON_VERSION" != 3.8 || (codespell  --ignore-words=.travis/codespell_ignore `git ls-files | grep -vE '^web/static/(doc|an|bs|d3|jq|lk)/|^data/|\.(png|gif|svg)$'` && echo "codespell OK")) && (test "$DB" != "maxmind" || test "$TRAVIS_PYTHON_VERSION" != 3.8 || (pylint -e all -d abstract-method,arguments-differ,attribute-defined-outside-init,bad-continuation,broad-except,cyclic-import,deprecated-module,duplicate-code,exec-used,fixme,function-redefined,global-statement,global-variable-undefined,import-error,import-outside-toplevel,invalid-name,locally-disabled,missing-docstring,no-absolute-import,no-member,non-parent-init-called,no-self-use,old-division,protected-access,raise-missing-from,reload-builtin,round-builtin,singleton-comparison,subprocess-popen-preexec-fn,super-init-not-called,super-with-arguments,suppressed-message,too-few-public-methods,too-many-ancestors,too-many-arguments,too-many-boolean-expressions,too-many-branches,too-many-instance-attributes,too-many-lines,too-many-locals,too-many-nested-blocks,too-many-public-methods,too-many-return-statements,too-many-statements,unsubscriptable-object,unsupported-membership-test,unused-argument,useless-object-inheritance,wrong-import-order,wrong-import-position ivre && echo "pylint OK")) && cd tests/ && coverage erase && coverage run --parallel-mode tests.py --coverage && coverage combine && coverage report -i

after_success:
  - codecov

after_failure:
  - cat /tmp/webserver.log
